@import '../../scss/root';


@keyframes ripple {
	0%   { transform: translate(0, 0); }
	80%  { transform: translate(20%, 20%) scale(1.6); }
	100% { 
    transform: translate(20%, 20%) scale(1.6); 
    opacity: 0; 
    border-radius: 0;
  }
}

@keyframes fade {
	0%   { opacity: 1; }
  100% { opacity: 0; }
}

.root {
  width: fit-content
}

.checkboxWrapper {
  display: block;
  position: relative;
  margin: 0.50rem 0;
  max-width: 15px;
  max-height: 15px;
  font-size: 22px;
  cursor: pointer;
}

.input {
  position: absolute;
  height: 0;
  width: 0;
  opacity: 0;
  cursor: pointer;
}

.input:checked ~ .checkbox {
  background-color: var(--blue-core);
  border-color: var(--blue-core);
  transition: background-color 0.8s;
}

.checkbox {
  position: absolute;
  width: 15px;
  height: 15px;
  border: 1px solid var(--gray-3);
  border-radius: 3px;
}

.input:checked ~ .checkbox:after {
  display: block;
}

.checkbox:after {
  content: "";
  position: absolute;
  display: none;
}

.checkbox:after {
  top: 1px;
  left: 4.5px;
  width: 2px;
  height: 7px;
  border: solid white;
  border-width: 0 2.5px 2.5px 0;
  transform: rotate(40deg);
}

.checkboxRipple {
  background-color: var(--blue-core);
  width: 10px;
  height: 10px;
  border-radius: 50%;
  animation: ripple 0.3s ease-out forwards, 
             fade 0.3s ease-out forwards;
}

.text {
  vertical-align: middle;
  margin-left: 25px;

  // theme
  &.light { color: var(--black-core); }
  &.dark { color: var(--gray-1); }
}

.input:disabled ~ .checkbox {
  background-color: rgba(0, 0, 0, 0.043);
  border: rgba(0, 0, 0, 0.461);
}

.input:disabled ~ .checkbox:after {
  border-color: var(--gray-4);
}

.error { 
  border-color: var(--red-core);
  color: var(--red-core) !important; 

  .checkboxRipple {
    background-color: var(--red-core) !important;
  }

  .checkbox { border-color: var(--red-1); }
  .input:checked ~ .checkbox {
    background-color: var(--red-core) !important;
    border-color: var(--red-core) !important;
  }

  ~ .text {
    color: var(--red-core) !important;
  }
}