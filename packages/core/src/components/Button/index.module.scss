@import '../../scss/root';
@import '../../scss/mixins/button/button.scss';
@import '../../scss/mixins/button/variables.scss';
                                  

// For styling `flat` buttons
$flatMap: (
  primary: (
    color: #fff,
    bg-color: var(--blue-3)
  ),
  secondary: (
    color: #fff,
    bg-color: var(--red-3)
  ),
  warning: (
    color: var(--black-core),
    bg-color: var(--yellow-3)
  )
);

/* Major button classes - primary, secondary, warning, basic */                                   
.primary {
  @include button;

  color: #fff;
  background-color: var(--blue-core);
  border-radius: 4px;

  &--outline {
    @extend .flat;

    color: var(--blue-core);
    border: 1px solid var(--blue-core) !important;
    background-color: transparent;
  }

  &:focus {
    outline: var(--red-core) auto 1px !important;
  }
}

.secondary {
  @include button;

  color: #fff;
  background-image: $secondary-gradient;
  background-repeat: repeat-x;
  border-color: $button-bc1 $button-bc2 $button-bc3 !important;
  box-shadow: inset 0 1px 0 $primary-shade1, 
                    0 1px 2px $primary-shade2;
  background-color: var(--red-core);
  border-radius: 4px;

  &--outline {
    @extend .flat;
    color: var(--red-core);
    border: 1px solid var(--red-core) !important;
    background-color: transparent;
  }

  &:focus {
    outline: var(--blue-core) auto 1px !important;
  }
}

.warning {
  @include button;

  color: var(--black-core);
  background-color: var(--yellow-core);
  border-radius: 4px;

  &:focus {
    outline: var(--black-core) auto 1px !important;
  }
}

.basic {
  @include button;

  border-radius: 3px;

  &:focus {
    outline: var(--gray-4) auto 1px !important;
  }
}

/* The following styles serve as modifiers 
 * for the major button classes 
*/
.flat {
  background-image: none !important;
  background-repeat: no-repeat;
  border: 0;
  border-radius: 0 !important;
  box-shadow: none !important;
  text-shadow: none !important;

  @each $class, $rule in $flatMap {
    &.#{$class}:not(.disabled):not(.loading) {
      &:hover {
        color: map-get($rule, 'color');
        background-color: map-get($rule, 'bg-color');
      }
    }
  }
}

.fill { width: 100%; }

.loading {
  padding: 8px 20px 5px 20px;
  max-height: 35px;
  opacity: 0.90;
  cursor: default;

  &:focus {outline: none !important;}
}

.disabled {
  opacity: 0.70;
  cursor: default;
}

.small {
  min-width: fit-content;
  padding: 8px !important;
}

.medium { min-width: 40px; }

.large {
  min-width: 70px;
  max-height: 70px !important;
  padding: 15px 20px !important;
  font-size: 1.2em !important;
}

.light {
  &.basic {
    color: var(--black-core);
    background-color: #fff;
    border: 1px solid var(--gray-3);
  }
}

.dark {
  &.basic {
    color: var(--gray-1);
    border: 1px solid var(--black-6);
    background-color: var(--black-4) !important;
  }
}